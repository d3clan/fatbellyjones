<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
            http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
            http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	<bean id="twitterTweet" class="com.viviquity.core.twitter.TwitterTweet">
		<constructor-arg index="0" ref="accessToken" />
		<constructor-arg index="1"
			value="${com.viviquity.fatbellyjones.twitter.oath.key}" />
		<constructor-arg index="2"
			value="${com.viviquity.fatbellyjones.twitter.oath.secret}" />
		<constructor-arg index="3" ref="httpClient" />
		<constructor-arg index="4"
			value="${com.viviquity.fatbellyjones.tinyUrl.url}" />
	</bean>

	<bean id="httpClient" class="org.apache.commons.httpclient.HttpClient" />

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="1000000" />
	</bean>

	<bean id="accessToken" class="twitter4j.http.AccessToken">
		<constructor-arg index="0"
			value="${com.viviquity.fatbellyjones.twitter.oath.access.token}" />
		<constructor-arg index="1"
			value="${com.viviquity.fatbellyjones.twitter.oath.access.secret}" />
	</bean>

	<bean id="facebookEvent" class="com.viviquity.core.facebook.FacebookEvent">
		<constructor-arg index="0" ref="facebookClient" />
		<constructor-arg index="1"
			value="${com.viviquity.fatbellyjones.facebook.group.id}" />
	</bean>

	<bean id="facebookClient" class="com.google.code.facebookapi.FacebookJaxbRestClient">
		<constructor-arg index="0"
			value="${com.viviquity.fatbellyjones.facebook.api.key}" />
		<constructor-arg index="1"
			value="${com.viviquity.fatbellyjones.facebook.api.secret}" />
		<constructor-arg index="2"
			value="${com.viviquity.fatbellyjones.facebook.session.key}" />
	</bean>

	<bean id="storageManager" class="com.viviquity.core.storage.S3StorageManagerImpl">
		<constructor-arg index="0"
			value="${com.viviquity.fatbellyjones.aws.s3.baseLocation}" />
		<constructor-arg index="1" ref="restS3Service" />
		<constructor-arg index="2"
			value="${com.viviquity.fatbellyjones.aws.s3.bucket}" />
	</bean>

	<bean id="restS3Service" class="org.jets3t.service.impl.rest.httpclient.RestS3Service">
		<constructor-arg ref="awsCredentials" />
	</bean>

	<bean id="awsCredentials" class="org.jets3t.service.security.AWSCredentials">
		<constructor-arg index="0"
			value="${com.viviquity.fatbellyjones.aws.s3.key}" />
		<constructor-arg index="1"
			value="${com.viviquity.fatbellyjones.aws.s3.secret}" />
	</bean>

	<bean id="emailer" class="com.viviquity.core.email.impl.EmailerImpl">
		<constructor-arg index="0"
			value="${com.viviquity.fatbellyjones.smtp.server}" />
		<constructor-arg index="1"
			value="${com.viviquity.fatbellyjones.smtp.username}" />
		<constructor-arg index="2"
			value="${com.viviquity.fatbellyjones.smtp.password}" />
		<constructor-arg index="3"
			value="${com.viviquity.fatbellyjones.smtp.port}" />
		<constructor-arg index="4"
			value="${com.viviquity.fatbellyjones.email.image}" />
	</bean>

	<bean id="facebookImage" class="com.viviquity.core.facebook.FacebookImage">
		<constructor-arg index="0" value="/META-INF/facebook-bg.gif" />
		<constructor-arg index="1" value="/META-INF/Franks.ttf" />
	</bean>

	<bean id="posterImage" class="com.viviquity.core.image.PosterImage">
		<constructor-arg index="0"
			value="${com.viviquity.fatbellyjones.tmp.dir}" />
	</bean>

	<bean id="eventDao" class="com.viviquity.db.dao.impl.EventDaoImpl">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<bean id="playlistDao" class="com.viviquity.db.dao.impl.PlaylistDaoImpl">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<bean id="tuneDao" class="com.viviquity.db.dao.impl.TuneDaoImpl">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<bean id="userDao" class="com.viviquity.db.dao.impl.UserDaoImpl">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<bean id="roleDao" class="com.viviquity.db.dao.impl.RoleDaoImpl">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	
	<bean id="newsDao" class="com.viviquity.db.dao.impl.NewsDaoImpl">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<bean id="eventManager" class="com.viviquity.db.manager.impl.EventManagerImpl">
		<constructor-arg ref="eventDao" />
	</bean>

	<bean id="playlistManager" class="com.viviquity.db.manager.impl.PlaylistManagerImpl">
		<constructor-arg ref="playlistDao" />
	</bean>

	<bean id="tuneManager" class="com.viviquity.db.manager.impl.TuneManagerImpl">
		<constructor-arg ref="tuneDao" />
	</bean>

	<bean id="userManager" class="com.viviquity.db.manager.impl.UserManagerImpl">
		<constructor-arg ref="userDao" />
	</bean>

	<bean id="roleManager" class="com.viviquity.db.manager.impl.RoleManagerImpl">
		<constructor-arg ref="roleDao" />
	</bean>
	
	<bean id="newsManager" class="com.viviquity.db.manager.impl.NewsManagerImpl">
		<constructor-arg ref="newsDao" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		lazy-init="true">
		<property name="persistenceUnitName" value="fatbellyjones" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="true" />
				<property name="generateDdl" value="true" />
				<property name="databasePlatform" value="org.hibernate.dialect.PostgreSQLDialect" />
			</bean>
		</property>
	</bean>

	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		lazy-init="true">
		<property name="driverClassName" value="org.postgresql.Driver" />
		<property name="url" value="${com.viviquity.fatbellyjones.db.url}" />
		<property name="username" value="${com.viviquity.fatbellyjones.db.username}" />
		<property name="password" value="${com.viviquity.fatbellyjones.db.password}" />
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:fatbellyjones.properties</value>
		</property>
	</bean>

	<context:component-scan base-package="com.viviquity.core" />
	<context:annotation-config />
	<tx:annotation-driven />

</beans>